/*
* generated by Xtext
*/
grammar InternalSWML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package mdse.book.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mdse.book.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mdse.book.services.SWMLGrammarAccess;

}

@parser::members {

 	private SWMLGrammarAccess grammarAccess;
 	
    public InternalSWMLParser(TokenStream input, SWMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "WebModel";	
   	}
   	
   	@Override
   	protected SWMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleWebModel
entryRuleWebModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWebModelRule()); }
	 iv_ruleWebModel=ruleWebModel 
	 { $current=$iv_ruleWebModel.current; } 
	 EOF 
;

// Rule WebModel
ruleWebModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='webapp' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWebModelAccess().getWebappKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getWebModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWebModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWebModelAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWebModelAccess().getHypertextHypertextLayerParserRuleCall_3_0()); 
	    }
		lv_hypertext_3_0=ruleHypertextLayer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWebModelRule());
	        }
       		set(
       			$current, 
       			"hypertext",
        		lv_hypertext_3_0, 
        		"HypertextLayer");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWebModelAccess().getContentContentLayerParserRuleCall_4_0()); 
	    }
		lv_content_4_0=ruleContentLayer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWebModelRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_4_0, 
        		"ContentLayer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWebModelAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleHypertextLayer
entryRuleHypertextLayer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHypertextLayerRule()); }
	 iv_ruleHypertextLayer=ruleHypertextLayer 
	 { $current=$iv_ruleHypertextLayer.current; } 
	 EOF 
;

// Rule HypertextLayer
ruleHypertextLayer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='hypertext {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHypertextLayerAccess().getHypertextKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHypertextLayerAccess().getPagesIndexPageParserRuleCall_1_0()); 
	    }
		lv_pages_1_0=ruleIndexPage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHypertextLayerRule());
	        }
       		add(
       			$current, 
       			"pages",
        		lv_pages_1_0, 
        		"IndexPage");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHypertextLayerAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleIndexPage
entryRuleIndexPage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexPageRule()); }
	 iv_ruleIndexPage=ruleIndexPage 
	 { $current=$iv_ruleIndexPage.current; } 
	 EOF 
;

// Rule IndexPage
ruleIndexPage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='index' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIndexPageAccess().getIndexKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getIndexPageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexPageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='shows' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIndexPageAccess().getShowsKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexPageRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getIndexPageAccess().getDisplayedClassClassCrossReference_3_0()); 
	}

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIndexPageAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		lv_size_5_0=RULE_RESULTSPERPAGE
		{
			newLeafNode(lv_size_5_0, grammarAccess.getIndexPageAccess().getSizeResultsPerPageTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexPageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_5_0, 
        		"resultsPerPage");
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIndexPageAccess().getRightSquareBracketKeyword_6());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIndexPageAccess().getLeftCurlyBracketKeyword_7());
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIndexPageAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleContentLayer
entryRuleContentLayer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentLayerRule()); }
	 iv_ruleContentLayer=ruleContentLayer 
	 { $current=$iv_ruleContentLayer.current; } 
	 EOF 
;

// Rule ContentLayer
ruleContentLayer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='content {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContentLayerAccess().getContentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentLayerAccess().getClassesClassParserRuleCall_1_0()); 
	    }
		lv_classes_1_0=ruleClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentLayerRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_1_0, 
        		"Class");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContentLayerAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassAccess().getClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_3_0()); 
	    }
		lv_attributes_3_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='att' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeSWMLTypesEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleSWMLTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"SWMLTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getSemicolonKeyword_4());
    }
)
;





// Rule SWMLTypes
ruleSWMLTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='String' 
	{
        $current = grammarAccess.getSWMLTypesAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSWMLTypesAccess().getStringEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Integer' 
	{
        $current = grammarAccess.getSWMLTypesAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSWMLTypesAccess().getIntegerEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Float' 
	{
        $current = grammarAccess.getSWMLTypesAccess().getFloatEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSWMLTypesAccess().getFloatEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Email' 
	{
        $current = grammarAccess.getSWMLTypesAccess().getEmailEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSWMLTypesAccess().getEmailEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Boolean' 
	{
        $current = grammarAccess.getSWMLTypesAccess().getBooleanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getSWMLTypesAccess().getBooleanEnumLiteralDeclaration_4()); 
    }
));



RULE_RESULTSPERPAGE : ('10'|'20'|'30');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


