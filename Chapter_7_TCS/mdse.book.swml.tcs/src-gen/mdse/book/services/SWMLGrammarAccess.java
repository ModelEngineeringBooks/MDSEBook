/*
* generated by Xtext
*/

package mdse.book.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SWMLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class WebModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WebModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWebappKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHypertextAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHypertextHypertextLayerParserRuleCall_3_0 = (RuleCall)cHypertextAssignment_3.eContents().get(0);
		private final Assignment cContentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContentContentLayerParserRuleCall_4_0 = (RuleCall)cContentAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//WebModel:
		//	"webapp" name=ID "{" hypertext=HypertextLayer content=ContentLayer "}";
		public ParserRule getRule() { return rule; }

		//"webapp" name=ID "{" hypertext=HypertextLayer content=ContentLayer "}"
		public Group getGroup() { return cGroup; }

		//"webapp"
		public Keyword getWebappKeyword_0() { return cWebappKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//hypertext=HypertextLayer
		public Assignment getHypertextAssignment_3() { return cHypertextAssignment_3; }

		//HypertextLayer
		public RuleCall getHypertextHypertextLayerParserRuleCall_3_0() { return cHypertextHypertextLayerParserRuleCall_3_0; }

		//content=ContentLayer
		public Assignment getContentAssignment_4() { return cContentAssignment_4; }

		//ContentLayer
		public RuleCall getContentContentLayerParserRuleCall_4_0() { return cContentContentLayerParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class HypertextLayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HypertextLayer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHypertextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPagesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPagesIndexPageParserRuleCall_1_0 = (RuleCall)cPagesAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//HypertextLayer:
		//	"hypertext {" pages+=IndexPage+ "}";
		public ParserRule getRule() { return rule; }

		//"hypertext {" pages+=IndexPage+ "}"
		public Group getGroup() { return cGroup; }

		//"hypertext {"
		public Keyword getHypertextKeyword_0() { return cHypertextKeyword_0; }

		//pages+=IndexPage+
		public Assignment getPagesAssignment_1() { return cPagesAssignment_1; }

		//IndexPage
		public RuleCall getPagesIndexPageParserRuleCall_1_0() { return cPagesIndexPageParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class IndexPageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndexPage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cShowsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDisplayedClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDisplayedClassClassCrossReference_3_0 = (CrossReference)cDisplayedClassAssignment_3.eContents().get(0);
		private final RuleCall cDisplayedClassClassIDTerminalRuleCall_3_0_1 = (RuleCall)cDisplayedClassClassCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSizeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSizeResultsPerPageTerminalRuleCall_5_0 = (RuleCall)cSizeAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//IndexPage:
		//	"index" name=ID "shows" displayedClass=[Class] "[" size=resultsPerPage "]" "{" "}";
		public ParserRule getRule() { return rule; }

		//"index" name=ID "shows" displayedClass=[Class] "[" size=resultsPerPage "]" "{" "}"
		public Group getGroup() { return cGroup; }

		//"index"
		public Keyword getIndexKeyword_0() { return cIndexKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"shows"
		public Keyword getShowsKeyword_2() { return cShowsKeyword_2; }

		//displayedClass=[Class]
		public Assignment getDisplayedClassAssignment_3() { return cDisplayedClassAssignment_3; }

		//[Class]
		public CrossReference getDisplayedClassClassCrossReference_3_0() { return cDisplayedClassClassCrossReference_3_0; }

		//ID
		public RuleCall getDisplayedClassClassIDTerminalRuleCall_3_0_1() { return cDisplayedClassClassIDTerminalRuleCall_3_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//size=resultsPerPage
		public Assignment getSizeAssignment_5() { return cSizeAssignment_5; }

		//resultsPerPage
		public RuleCall getSizeResultsPerPageTerminalRuleCall_5_0() { return cSizeResultsPerPageTerminalRuleCall_5_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ContentLayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContentLayer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassesClassParserRuleCall_1_0 = (RuleCall)cClassesAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ContentLayer:
		//	"content {" classes+=Class+ "}";
		public ParserRule getRule() { return rule; }

		//"content {" classes+=Class+ "}"
		public Group getGroup() { return cGroup; }

		//"content {"
		public Keyword getContentKeyword_0() { return cContentKeyword_0; }

		//classes+=Class+
		public Assignment getClassesAssignment_1() { return cClassesAssignment_1; }

		//Class
		public RuleCall getClassesClassParserRuleCall_1_0() { return cClassesClassParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Class:
		//	"class" name=ID "{" attributes+=Attribute+ "}";
		public ParserRule getRule() { return rule; }

		//"class" name=ID "{" attributes+=Attribute+ "}"
		public Group getGroup() { return cGroup; }

		//"class"
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//attributes+=Attribute+
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSWMLTypesEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Attribute:
		//	"att" name=ID ":" type=SWMLTypes ";";
		public ParserRule getRule() { return rule; }

		//"att" name=ID ":" type=SWMLTypes ";"
		public Group getGroup() { return cGroup; }

		//"att"
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=SWMLTypes
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//SWMLTypes
		public RuleCall getTypeSWMLTypesEnumRuleCall_3_0() { return cTypeSWMLTypesEnumRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	
	
	public class SWMLTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "SWMLTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntegerIntegerKeyword_1_0 = (Keyword)cIntegerEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFloatFloatKeyword_2_0 = (Keyword)cFloatEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cEmailEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cEmailEmailKeyword_3_0 = (Keyword)cEmailEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cBooleanBooleanKeyword_4_0 = (Keyword)cBooleanEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum SWMLTypes:
		//	String | Integer | Float | Email | Boolean;
		public EnumRule getRule() { return rule; }

		//String | Integer | Float | Email | Boolean
		public Alternatives getAlternatives() { return cAlternatives; }

		//String
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }

		//"String"
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }

		//Integer
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_1() { return cIntegerEnumLiteralDeclaration_1; }

		//"Integer"
		public Keyword getIntegerIntegerKeyword_1_0() { return cIntegerIntegerKeyword_1_0; }

		//Float
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_2() { return cFloatEnumLiteralDeclaration_2; }

		//"Float"
		public Keyword getFloatFloatKeyword_2_0() { return cFloatFloatKeyword_2_0; }

		//Email
		public EnumLiteralDeclaration getEmailEnumLiteralDeclaration_3() { return cEmailEnumLiteralDeclaration_3; }

		//"Email"
		public Keyword getEmailEmailKeyword_3_0() { return cEmailEmailKeyword_3_0; }

		//Boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_4() { return cBooleanEnumLiteralDeclaration_4; }

		//"Boolean"
		public Keyword getBooleanBooleanKeyword_4_0() { return cBooleanBooleanKeyword_4_0; }
	}
	
	private WebModelElements pWebModel;
	private HypertextLayerElements pHypertextLayer;
	private IndexPageElements pIndexPage;
	private TerminalRule tResultsPerPage;
	private ContentLayerElements pContentLayer;
	private ClassElements pClass;
	private AttributeElements pAttribute;
	private SWMLTypesElements unknownRuleSWMLTypes;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public SWMLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//WebModel:
	//	"webapp" name=ID "{" hypertext=HypertextLayer content=ContentLayer "}";
	public WebModelElements getWebModelAccess() {
		return (pWebModel != null) ? pWebModel : (pWebModel = new WebModelElements());
	}
	
	public ParserRule getWebModelRule() {
		return getWebModelAccess().getRule();
	}

	//HypertextLayer:
	//	"hypertext {" pages+=IndexPage+ "}";
	public HypertextLayerElements getHypertextLayerAccess() {
		return (pHypertextLayer != null) ? pHypertextLayer : (pHypertextLayer = new HypertextLayerElements());
	}
	
	public ParserRule getHypertextLayerRule() {
		return getHypertextLayerAccess().getRule();
	}

	//IndexPage:
	//	"index" name=ID "shows" displayedClass=[Class] "[" size=resultsPerPage "]" "{" "}";
	public IndexPageElements getIndexPageAccess() {
		return (pIndexPage != null) ? pIndexPage : (pIndexPage = new IndexPageElements());
	}
	
	public ParserRule getIndexPageRule() {
		return getIndexPageAccess().getRule();
	}

	//terminal resultsPerPage returns ecore::EInt:
	//	"10" | "20" | "30";
	public TerminalRule getResultsPerPageRule() {
		return (tResultsPerPage != null) ? tResultsPerPage : (tResultsPerPage = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "resultsPerPage"));
	} 

	//ContentLayer:
	//	"content {" classes+=Class+ "}";
	public ContentLayerElements getContentLayerAccess() {
		return (pContentLayer != null) ? pContentLayer : (pContentLayer = new ContentLayerElements());
	}
	
	public ParserRule getContentLayerRule() {
		return getContentLayerAccess().getRule();
	}

	//Class:
	//	"class" name=ID "{" attributes+=Attribute+ "}";
	public ClassElements getClassAccess() {
		return (pClass != null) ? pClass : (pClass = new ClassElements());
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}

	//Attribute:
	//	"att" name=ID ":" type=SWMLTypes ";";
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//enum SWMLTypes:
	//	String | Integer | Float | Email | Boolean;
	public SWMLTypesElements getSWMLTypesAccess() {
		return (unknownRuleSWMLTypes != null) ? unknownRuleSWMLTypes : (unknownRuleSWMLTypes = new SWMLTypesElements());
	}
	
	public EnumRule getSWMLTypesRule() {
		return getSWMLTypesAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
